#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void createMatrix(char key[], char matrix[SIZE][SIZE]) {
    int i, j, k = 0;
    int alpha[26] = {0};
    int len = strlen(key);
    
    for (i = 0; i < len; i++) {
        key[i] = toupper(key[i]);
        if (key[i] == 'J') key[i] = 'I';
        if (!alpha[key[i] - 'A']) {
            alpha[key[i] - 'A'] = 1;
            matrix[k / SIZE][k % SIZE] = key[i];
            k++;
        }
    }
    
    for (i = 0; i < 26; i++) {
        if (!alpha[i] && (i + 'A' != 'J')) {
            matrix[k / SIZE][k % SIZE] = i + 'A';
            k++;
        }
    }
}

void encrypt(char plaintext[], char matrix[SIZE][SIZE], char ciphertext[]) {
    int i, j, k = 0;
    char a, b;
    
    for (i = 0; plaintext[i]; i++) {
        if (plaintext[i] == ' ') continue;
        plaintext[i] = toupper(plaintext[i]);
        if (plaintext[i] == 'J') plaintext[i] = 'I';
        
        if (i + 1 < strlen(plaintext) && plaintext[i] == plaintext[i + 1]) {
            ciphertext[k++] = plaintext[i];
            ciphertext[k++] = 'X';
            i--;
        } else {
            ciphertext[k++] = plaintext[i];
        }
    }
    
    if (k % 2 != 0) {
        ciphertext[k++] = 'X';
    }
    
    ciphertext[k] = '\0';
    
    for (i = 0; i < k; i += 2) {
        a = ciphertext[i];
        b = ciphertext[i + 1];
        int row1, col1, row2, col2;
        
        for (j = 0; j < SIZE; j++) {
            for (int l = 0; l < SIZE; l++) {
                if (matrix[j][l] == a) {
                    row1 = j;
                    col1 = l;
                }
                if (matrix[j][l] == b) {
                    row2 = j;
                    col2 = l;
                }
            }
        }
        
        if (row1 == row2) {
            ciphertext[i] = matrix[row1][(col1 + 1) % SIZE];
            ciphertext[i + 1] = matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            ciphertext[i] = matrix[(row1 + 1) % SIZE][col1];
            ciphertext[i + 1] = matrix[(row2 + 1) % SIZE][col2];
        } else {
            ciphertext[i] = matrix[row1][col2];
            ciphertext[i + 1] = matrix[row2][col1];
        }
    }
}

int main() {
    char key[100], plaintext[100], ciphertext[100];
    char matrix[SIZE][SIZE];
    
    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = 0; 
    
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0; 
    
    createMatrix(key, matrix);
    encrypt(plaintext, matrix, ciphertext);
    
    printf("Ciphertext: %s\n", ciphertext);
    
    return 0;
}v
